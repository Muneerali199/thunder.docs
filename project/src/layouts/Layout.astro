---
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/600.css';
import '@fontsource/inter/700.css';
import Sidebar from '../components/Sidebar.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  currentPath?: string;
}

const { title, currentPath = '/' } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} - Thunder Support</title>
    <meta name="description" content="Thunder Support - Documentation and help center" />
  </head>
  <body class="bg-gray-50 text-gray-900 antialiased">
    <div class="flex min-h-screen flex-col">
      <Header />
      
      <div class="flex flex-1 flex-col md:flex-row">
        <Sidebar currentPath={currentPath} />
        
        <main class="flex-1 px-4 py-8 md:px-8 lg:px-12 max-w-4xl mx-auto w-full">
          <slot />
          
          <div class="mt-16 border-t border-gray-200 pt-8">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Was this page helpful?</h3>
            <div class="flex gap-3">
              <button class="feedback-btn px-4 py-2 bg-gray-100 hover:bg-gray-200 transition-colors rounded-md text-gray-700" data-value="yes">
                Yes
              </button>
              <button class="feedback-btn px-4 py-2 bg-gray-100 hover:bg-gray-200 transition-colors rounded-md text-gray-700" data-value="no">
                No
              </button>
            </div>
          </div>
        </main>
      </div>
      
      <Footer />
    </div>
    
    <script>
      // Handle feedback buttons
      document.querySelectorAll('.feedback-btn').forEach(button => {
        button.addEventListener('click', () => {
          const value = button.getAttribute('data-value');
          // Here you would normally send this data to your analytics or feedback system
          console.log(`User found this page ${value === 'yes' ? 'helpful' : 'not helpful'}`);
          
          // Visual feedback
          document.querySelectorAll('.feedback-btn').forEach(btn => {
            btn.classList.remove('bg-primary-100', 'text-primary-700', 'border-primary-300');
            btn.classList.add('bg-gray-100');
            btn.disabled = true;
          });
          
          button.classList.remove('bg-gray-100');
          button.classList.add('bg-primary-100', 'text-primary-700', 'border', 'border-primary-300');
          
          // Show thank you message
          const container = button.closest('div').parentElement;
          const thankYou = document.createElement('p');
          thankYou.textContent = 'Thank you for your feedback!';
          thankYou.className = 'mt-4 text-sm text-gray-600 animate-fade-in';
          container.appendChild(thankYou);
        });
      });
    </script>
  </body>
</html>

<style is:global>
  html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
  }
  
  html {
    font-family: 'Inter', system-ui, sans-serif;
    font-size: 16px;
    line-height: 1.5;
  }
  
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.2;
    font-weight: 600;
  }
  
  h1 {
    font-size: 2.25rem;
    margin-top: 0;
    margin-bottom: 1.5rem;
  }
  
  h2 {
    font-size: 1.75rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  h3 {
    font-size: 1.5rem;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  p {
    margin-top: 0;
    margin-bottom: 1rem;
  }
  
  a {
    color: #6d28d9;
    text-decoration: none;
    transition: color 0.15s ease-in-out;
  }
  
  a:hover {
    color: #5b21b6;
    text-decoration: underline;
  }
  
  code {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 0.9em;
    padding: 0.2em 0.4em;
    background-color: rgba(108, 92, 231, 0.1);
    border-radius: 0.25rem;
  }
  
  pre {
    overflow-x: auto;
    padding: 1rem;
    background-color: #f8fafc;
    border-radius: 0.5rem;
    border: 1px solid #e2e8f0;
  }
  
  pre code {
    background-color: transparent;
    padding: 0;
    border-radius: 0;
  }
  
  blockquote {
    border-left: 4px solid #6d28d9;
    margin-left: 0;
    padding-left: 1rem;
    color: #4b5563;
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1rem;
  }
  
  table th,
  table td {
    padding: 0.75rem;
    border: 1px solid #e5e7eb;
  }
  
  table th {
    background-color: #f9fafb;
    font-weight: 600;
    text-align: left;
  }
  
  img {
    max-width: 100%;
    height: auto;
  }
  
  button {
    cursor: pointer;
  }
  
  .animate-fade-in {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>